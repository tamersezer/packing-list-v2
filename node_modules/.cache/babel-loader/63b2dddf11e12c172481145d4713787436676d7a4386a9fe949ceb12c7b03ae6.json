{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState('light');useEffect(()=>{const savedTheme=localStorage.getItem('theme');if(savedTheme){setTheme(savedTheme);document.documentElement.classList.toggle('dark',savedTheme==='dark');document.body.classList.toggle('dark',savedTheme==='dark');}},[]);const toggleTheme=()=>{const newTheme=theme==='light'?'dark':'light';setTheme(newTheme);localStorage.setItem('theme',newTheme);document.documentElement.classList.toggle('dark');document.body.classList.toggle('dark');};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme},children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","ThemeContext","undefined","ThemeProvider","_ref","children","theme","setTheme","savedTheme","localStorage","getItem","document","documentElement","classList","toggle","body","toggleTheme","newTheme","setItem","Provider","value","useTheme","context","Error"],"sources":["/Users/tamersezer/Cursor Projects/Deneme/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [theme, setTheme] = useState<Theme>('light');\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) {\n      setTheme(savedTheme);\n      document.documentElement.classList.toggle('dark', savedTheme === 'dark');\n      document.body.classList.toggle('dark', savedTheme === 'dark');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n    document.documentElement.classList.toggle('dark');\n    document.body.classList.toggle('dark');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAS9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,aAAsD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjF,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAQ,OAAO,CAAC,CAElDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAU,CACzD,GAAIF,UAAU,CAAE,CACdD,QAAQ,CAACC,UAAU,CAAC,CACpBG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAEN,UAAU,GAAK,MAAM,CAAC,CACxEG,QAAQ,CAACI,IAAI,CAACF,SAAS,CAACC,MAAM,CAAC,MAAM,CAAEN,UAAU,GAAK,MAAM,CAAC,CAC/D,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,QAAQ,CAAGX,KAAK,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CACrDC,QAAQ,CAACU,QAAQ,CAAC,CAClBR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAC,CACvCN,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC,CACjDH,QAAQ,CAACI,IAAI,CAACF,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC,CACxC,CAAC,CAED,mBACEd,IAAA,CAACC,YAAY,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEd,KAAK,CAAEU,WAAY,CAAE,CAAAX,QAAA,CAClDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAgB,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAG1B,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIqB,OAAO,GAAKpB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAqB,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}