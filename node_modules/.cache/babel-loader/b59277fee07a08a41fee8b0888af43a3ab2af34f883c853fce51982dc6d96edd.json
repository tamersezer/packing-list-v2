{"ast":null,"code":"const API_URL = 'http://localhost:3001';\nexport const productService = {\n  async getAll() {\n    const response = await fetch(`${API_URL}/products`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch products');\n    }\n    return response.json();\n  },\n  async create(product) {\n    const response = await fetch(`${API_URL}/products`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create product');\n    }\n    return response.json();\n  },\n  async delete(id) {\n    const response = await fetch(`${API_URL}/products/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete product');\n    }\n  },\n  async update(id, product) {\n    const response = await fetch(`${API_URL}/products/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update product');\n    }\n    return response.json();\n  }\n};\nexport const hsCodeService = {\n  async getAll() {\n    const response = await fetch(`${API_URL}/hsCodes`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch HS Codes');\n    }\n    return response.json();\n  },\n  async add(hsCode) {\n    const response = await fetch(`${API_URL}/hsCodes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        code: hsCode\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add HS Code');\n    }\n  },\n  async delete(code) {\n    const response = await fetch(`${API_URL}/hsCodes/${code}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete HS Code');\n    }\n  }\n};","map":{"version":3,"names":["API_URL","productService","getAll","response","fetch","ok","Error","json","create","product","method","headers","body","JSON","stringify","delete","id","update","hsCodeService","add","hsCode","code"],"sources":["/Users/tamersezer/Cursor Projects/Deneme/src/services/api.ts"],"sourcesContent":["import type { Product } from '../types/Product';\n\nconst API_URL = 'http://localhost:3001';\n\nexport const productService = {\n  async getAll(): Promise<Product[]> {\n    const response = await fetch(`${API_URL}/products`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch products');\n    }\n    \n    return response.json();\n  },\n\n  async create(product: Product): Promise<Product> {\n    const response = await fetch(`${API_URL}/products`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(product),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to create product');\n    }\n    \n    return response.json();\n  },\n\n  async delete(id: string): Promise<void> {\n    const response = await fetch(`${API_URL}/products/${id}`, {\n      method: 'DELETE',\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to delete product');\n    }\n  },\n\n  async update(id: string, product: Product): Promise<Product> {\n    const response = await fetch(`${API_URL}/products/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(product),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to update product');\n    }\n    \n    return response.json();\n  }\n};\n\nexport const hsCodeService = {\n  async getAll(): Promise<string[]> {\n    const response = await fetch(`${API_URL}/hsCodes`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch HS Codes');\n    }\n    \n    return response.json();\n  },\n\n  async add(hsCode: string): Promise<void> {\n    const response = await fetch(`${API_URL}/hsCodes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ code: hsCode }),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to add HS Code');\n    }\n  },\n\n  async delete(code: string): Promise<void> {\n    const response = await fetch(`${API_URL}/hsCodes/${code}`, {\n      method: 'DELETE',\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to delete HS Code');\n    }\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}