{"ast":null,"code":"var _jsxFileName = \"/Users/tamersezer/Cursor Projects/Deneme/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const userData = await authService.getCurrentUser();\n          setUser(userData);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setIsLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (username, password) => {\n    const {\n      token,\n      user\n    } = await authService.login(username, password);\n    localStorage.setItem('token', token);\n    setUser(user);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","initAuth","token","localStorage","getItem","userData","getCurrentUser","error","removeItem","login","username","password","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/tamersezer/Cursor Projects/Deneme/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\n\ninterface User {\n  id: string;\n  username: string;\n  isAdmin: boolean;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => Promise<void>;\n  logout: () => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const userData = await authService.getCurrentUser();\n          setUser(userData);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setIsLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    const { token, user } = await authService.login(username, password);\n    localStorage.setItem('token', token);\n    setUser(user);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe9C,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,cAAc,CAAC,CAAC;UACnDR,OAAO,CAACO,QAAQ,CAAC;QACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;QAClC;MACF;MACAR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IAC1D,MAAM;MAAET,KAAK;MAAEL;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACoB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IACnER,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEV,KAAK,CAAC;IACpCJ,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMgB,MAAM,GAAGA,CAAA,KAAM;IACnBV,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEY,KAAK;MAAEI,MAAM;MAAEd;IAAU,CAAE;IAAAJ,QAAA,EAC7DA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CArCWF,YAAqD;AAAA0B,EAAA,GAArD1B,YAAqD;AAuClE,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGrC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI+B,OAAO,KAAK9B,SAAS,EAAE;IACzB,MAAM,IAAI+B,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}